# skewness
apply(netreturn,2,skewness)
apply(asset,2,skewness)
# kurtosis
apply(netreturn,2,kurtosis)
apply(asset,2,kurtosis)
# beta
betai<-rep(0,ncol(netreturn))
for(i in 1:ncol(netreturn)){
# betai[i]<-((netreturn[,i]-rf)/(netreturn[,ncol(netreturn)]-rf))
betai[i]<-cov(netreturn[,i],netreturn[,ncol(netreturn)])/var(netreturn[,ncol(netreturn)])
}
betai
# plot monthly prices
plot(asset[,16],type="l",lty=23,ylim=c(min(asset[,16]),max(asset[,16])),xlab="Time Series",ylab="S&P500 Price",main="Monthly Closing Price for S&P 500")
color1<-c("red", "blue","green","darkgrey","orange","pink","black")
plot(asset[,1],type="l",col="red",ylim=c(0,220),main="Monthly Closing Price for 7 Assets",ylab="Price",xlab="Time Series")
lines(asset[,2],col="blue")
lines(asset[,3],col="green")
lines(asset[,4],col="darkgrey")
lines(asset[,5],col="orange")
lines(asset[,6],col="pink")
lines(asset[,7],col="black")
legend("topright",c("AMD","AAPL","BAC","COKE","FCX","F","GE"),lty=1,col=color1)
color2<-c("red","blue","green","grey","orange","pink","lightblue","darkgreen")
plot(asset[,8],type="l",col="red",ylim=c(0,100),main="Monthly Closing Price for 8 Assets",ylab="Price",xlab="Time Series")
lines(asset[,9],col="blue")
lines(asset[,10],col="green")
lines(asset[,11],col="grey")
lines(asset[,12],col="orange")
lines(asset[,13],col="pink")
lines(asset[,14],col="lightblue")
lines(asset[,15],col="darkgreen")
legend("topright",c("MDT","MRO","PFE","SIRI","SBUX","X","VALE","VZ"),lty=1,col=color2)
# plot monthly returns
# par(mfrow=c(1,3))
color<-c("red","blue")
plot(sp500,type='l',lty=1,col="red",ylim=c(min(netreturn),max(netreturn)),main="AMD Monthly Returns")
lines(AMD,col="blue",lty=23)
legend("bottomright",c("sp500","AMD"),lty=c(1,23),col=color)
plot(sp500,type='l',lty=1,col="red",ylim=c(min(netreturn),max(netreturn)),main="AAPL Monthly Returns")
lines(AAPL,col="blue")
legend("bottomright",c("sp500","AAPL"),lty=c(1,23),col=color)
plot(sp500,type='l',lty=1,col="red",ylim=c(min(netreturn),max(netreturn)),main="BAC Monthly Returns")
lines(BAC,col="blue")
legend("bottomright",c("sp500","BAC"),lty=c(1,23),col=color)
plot(sp500,type='l',lty=1,col="red",ylim=c(min(netreturn),max(netreturn)),main="COKE Monthly Returns")
lines(COKE,col="blue")
legend("bottomright",c("sp500","COKE"),lty=c(1,23),col=color)
plot(sp500,type='l',lty=1,col="red",ylim=c(min(netreturn),max(netreturn)),main="FCX Monthly Returns")
lines(FCX,col="blue")
legend("bottomright",c("sp500","FCX"),lty=c(1,23),col=color)
plot(sp500,type='l',lty=1,col="red",ylim=c(min(netreturn),max(netreturn)),main="F Monthly Returns")
lines(F,col="blue")
legend("bottomright",c("sp500","F"),lty=c(1,23),col=color)
plot(sp500,type='l',lty=1,col="red",ylim=c(min(netreturn),max(netreturn)),main="GE Monthly Returns")
lines(GE,col="blue")
legend("bottomright",c("sp500","GE"),lty=c(1,23),col=color)
plot(sp500,type='l',lty=1,col="red",ylim=c(min(netreturn),max(netreturn)),main="MDT Monthly Returns")
lines(MDT,col="blue")
legend("bottomright",c("sp500","MDT"),lty=c(1,23),col=color)
plot(sp500,type='l',lty=1,col="red",ylim=c(min(netreturn),max(netreturn)),main="MRO Monthly Returns")
lines(MRO,col="blue")
legend("bottomright",c("sp500","MRO"),lty=c(1,23),col=color)
plot(sp500,type='l',lty=1,col="red",ylim=c(min(netreturn),max(netreturn)),main="PFE Monthly Returns")
lines(PFE,col="blue")
legend("bottomright",c("sp500","PFE"),lty=c(1,23),col=color)
plot(sp500,type='l',lty=1,col="red",ylim=c(min(netreturn),max(netreturn)),main="SIRI Monthly Returns")
lines(SIRI,col="blue")
legend("bottomright",c("sp500","SIRI"),lty=c(1,23),col=color)
plot(sp500,type='l',lty=1,col="red",ylim=c(min(netreturn),max(netreturn)),main="SBUX Monthly Returns")
lines(SBUX,col="blue")
legend("bottomright",c("sp500","SBUX"),lty=c(1,23),col=color)
plot(sp500,type='l',lty=1,col="red",ylim=c(min(netreturn),max(netreturn)),main="X Monthly Returns")
lines(X,col="blue")
legend("bottomright",c("sp500","X"),lty=c(1,23),col=color)
plot(sp500,type='l',lty=1,col="red",ylim=c(min(netreturn),max(netreturn)),main="VALE Monthly Returns")
lines(VALE,col="blue")
legend("bottomright",c("sp500","VALE"),lty=c(1,23),col=color)
plot(sp500,type='l',lty=1,col="red",ylim=c(min(netreturn),max(netreturn)),main="VZ Monthly Returns")
lines(VZ,col="blue")
legend("bottomright",c("sp500","VZ"),lty=c(1,23),col=color)
# Equity Curve
EquityCurve<-cumprod(1+netreturn)
par(mfrow=c(1,1))
colorEC<-c("red","blue","green","darkgrey","orange","pink","darkgreen","lightblue","purple","darkblue","magenta","slateblue4","red3","grey","green3")
name<-c("SP500","AMD","AAPL","BAC","COKE","FCX","F","GE","MDT","MRO","PFE","SIRI","SBUX","X","VALE","VZ")
plot(EquityCurve[,ncol(EquityCurve)],type="l",lwd=2.5,lty=2,main="Equity Curve",ylim=c(min(EquityCurve),max(EquityCurve)),ylab="Return of 1 dollar", xlab="Time Series")
for(i in 1:(ncol(EquityCurve)-1)){
lines(EquityCurve[,i],col=colorEC[i])
}
legend("topleft",name,lty=c(2,rep(1,15)),col=c("black",colorEC),cex=0.5)
#rainbow color
# pie(rep(1, times = 1000), labels = "", col = rainbow(1000), border = rainbow(1000),main = "rainbow1000")
# Histogram
par(mfrow=c(2,3))
hist(AMD,main="AMD")
hist(AAPL,main="AAPL")
hist(BAC,main="BAC")
hist(COKE,main="COKE")
hist(FCX,main="FCX")
hist(F,main="F")
hist(GE,main="GE")
hist(MDT,main="MDT")
hist(MRO,main="MRO")
hist(PFE,main="PFE")
hist(SIRI,main="SIRI")
hist(SBUX,main="SBUX")
hist(X,main="X")
hist(VALE,main="VALE")
hist(VZ,main="VZ")
# Boxplot
hist(AMD,main="AMD")
hist(AAPL,main="AAPL")
hist(BAC,main="BAC")
par(mfrow = c(1,1))
# Boxplot
library("plotly")
library("ggplot2")
plot_ly(netreturn,y=AMD,type="box",name="AMD") %>%
add_trace(y=AAPL,type="box",name="AAPL") %>%
add_trace(y=BAC,type="box",name="BAC") %>%
add_trace(y=COKE,type="box",name="COKE") %>%
add_trace(y=FCX,type="box",name="FCX") %>%
add_trace(y=F,type="box",name="F") %>%
add_trace(y=GE,type="box",name="GE") %>%
add_trace(y=MDT,type="box",name="MDT") %>%
add_trace(y=MRO,type="box",name="MRO") %>%
add_trace(y=PFE,type="box",name="PFE") %>%
add_trace(y=SIRI,type="box",name="SIRI") %>%
add_trace(y=SBUX,type="box",name="SBUX") %>%
add_trace(y=X,type="box",name="X") %>%
add_trace(y=VALE,type="box",name="VALE") %>%
add_trace(y=VZ,type="box",name="VZ") %>%
layout(title="Boxplot of assets' returns")
plot_ly(netreturn,y=AMD,type="box",name="AMD") %>%
add_trace(y=AAPL,type="box",name="AAPL") %>%
add_trace(y=BAC,type="box",name="BAC") %>%
add_trace(y=COKE,type="box",name="COKE") %>%
add_trace(y=FCX,type="box",name="FCX") %>%
layout(title="Boxplot of five assets' returns")
plot_ly(netreturn,y=F,type="box",name="F") %>%
add_trace(y=GE,type="box",name="GE") %>%
add_trace(y=MDT,type="box",name="MDT") %>%
add_trace(y=MRO,type="box",name="MRO") %>%
add_trace(y=PFE,type="box",name="PFE") %>%
layout(title="Boxplot of five assets' returns")
plot_ly(netreturn,y=SIRI,type="box",name="SIRI") %>%
add_trace(y=SBUX,type="box",name="SBUX") %>%
add_trace(y=X,type="box",name="X") %>%
add_trace(y=VALE,type="box",name="VALE") %>%
add_trace(y=VZ,type="box",name="VZ") %>%
layout(title="Boxplot of five assets' returns")
# Outlier test
mybox
mybox = boxplot(netreturn[,1])
mybox$out
data2[mybox$out]
data2[mybox$out,]
data2[netreturn==mybox$out,]
data2[netreturn$AMD==mybox$out,]
data2[netreturn==mybox$out,c(1,2)]
for (i in 1:nrow(netreturn)) {
mybox[i] = boxplot(netreturn[,i])
out[i] = mybox[i]$out
data2[netreturn==out[i],c(1,i)]
}
for (i in 1:nrow(netreturn)) {
mybox[i] = boxplot(netreturn[,i])
data2[netreturn==mybox[i]$out,c(1,i)]
}
data2[netreturn==mybox$out,c(1,2)]
for (i in 1:nrow(netreturn)) {
mybox[i] = boxplot(netreturn[,i])
data2[netreturn==mybox[i]$out,c(1,i+1)]
}
data2[netreturn==mybox$out,c(1,2)]
data2[netreturn[1]==mybox$out,c(1,2)]
data2[netreturn[,1]==mybox$out,c(1,2)]
data2[which(netreturn[,1]==mybox$out)]
?which
data2[which(netreturn[,1]==mybox$out)]
data2[netreturn[,1]==mybox$out,]
data2[netreturn[,1]==mybox$out,]
data2[netreturn[,1]==mybox$out, c(1,2)]
for (i in 1:nrow(netreturn)) {
mybox[i] = boxplot(netreturn[,i])
data2[netreturn[,i]==mybox[i]$out,c(1,i+1)]
}
for (i in 1:nrow(netreturn)) {
mybox[i] = boxplot(netreturn[,i])
data2[data2[,i+1]==mybox[i]$out,c(1,i+1)]
}
mybox[i] = boxplot(netreturn[,i])
data2[data2[,i+1]==mybox[i]$out,c(1,i+1)]
data2[data2[,2]==mybox2$out,c(1,2)]
mybox2 = boxplot(data2[,2])
data2[data2[,2]==mybox2$out,c(1,2)]
mybox3 = boxplot(data2[,3])
data2[data2[,3]==mybox3$out,c(1,3)]
mybox4 = boxplot(data2[,4])
data2[data2[,4]==mybox2$out,c(1,4)]
mybox5 = boxplot(data2[,5])
data2[data2[,5]==mybox2$out,c(1,5)]
boxplot(netreturn)
mybox4 = boxplot(data2[,4])
data2[data2[,4]==mybox4$out,c(1,4)]
mybox4 = boxplot(data2[,4])
mybox2 = boxplot(data2[,2])
data2[data2[,2]==mybox2$out,c(1,2)]
mybox3 = boxplot(data2[,3])
data2[data2[,3]==mybox3$out,c(1,3)]
mybox4 = boxplot(data2[,4])
data2[data2[,4]==mybox4$out,c(1,4)]
mybox4$out
mybox4 = boxplot(data2[,4])
data2[data2[,4]==mybox4$out,c(1,4)]
data2[data2[,4]==-0.251,c(1,4)]
View(netreturn)
round(data2, digits = 3)
round(data2[,-1], digits = 3)
data3 = round(data2[,-1], digits = 3)
View(data3)
?option
options(digits = 3)
data1<-read.csv("/Users/apple/Desktop/dataset.csv")
summary(data1)
###################################
#### 2. Descriptive Statistics ####
###################################
library("PerformanceAnalytics")
asset = data1[,-1]
netreturn = asset[2:(nrow(asset)),]/asset[1:(nrow(asset)-1),]-1
date1 = data1$Date[-1]
data2 = cbind(date1, netreturn)
dim(asset)
dim(netreturn)
View(data1)
View(data2)
options(digits = 3)
data1<-read.csv("/Users/apple/Desktop/dataset.csv")
summary(data1)
###################################
#### 2. Descriptive Statistics ####
###################################
library("PerformanceAnalytics")
asset = data1[,-1]
netreturn = asset[2:(nrow(asset)),]/asset[1:(nrow(asset)-1),]-1
date1 = data1$Date[-1]
data2 = cbind(date1, netreturn)
dim(asset)
dim(netreturn)
rf=0.35*10^(-2) #??????????????????????????????///not sure!!!!!!!!!!!!!
rf
data3 = round(netreturn,3)
data3
View(data3)
data3 = round(netreturn,3)
data2 = cbind(date1, data3)
mybox2 = boxplot(data2[,2])
data2[data2[,2]==mybox2$out,c(1,2)]
mybox3 = boxplot(data2[,3])
data2[data2[,3]==mybox3$out,c(1,3)]
mybox4 = boxplot(data2[,4])
data2[data2[,4]==-0.251,c(1,4)]
View(data2)
mybox4$out
mybox4 = boxplot(data2[,4])
data2[data2[,4]==-0.251,c(1,4)]
mybox4 = boxplot(data2[,4])
data2[data2[,4]==-0.251,c(1,4)]
mybox5 = boxplot(data2[,5])
data2[data2[,5]==mybox5$out,c(1,5)]
mybox2 = boxplot(data2[,2])
data2[data2[,2]==mybox2$out,c(1,2)]
mybox3 = boxplot(data2[,3])
data2[data2[,3]==mybox3$out,c(1,3)]
mybox4 = boxplot(data2[,4])
data2[data2[,4]==-0.251,c(1,4)]
data2[data2[,4]==mybox4$out,c(1,4)]
mybox4 = boxplot(data2[,4])
data2[data2[,4]==mybox4$out,c(1,4)]
mybox2 = boxplot(data2[,2])
data2[data2[,2]==c(mybox2$out),c(1,2)]
mybox5$out
outlier_values <- boxplot.stats(data2[2])$out  # outlier values.
outlier_values <- boxplot.stats(data2[,2])$out  # outlier values.
boxplot(data2[,2], main="Pressure Height", boxwex=0.1)
boxplot(data2[,2], main="Pressure Height", boxwex=0.8)
mtext(paste("Outliers: ", paste(outlier_values, collapse=", ")), cex=0.6)
outlier_values <- boxplot.stats(data2)$out  # outlier values.
outlier_values <- boxplot.stats(data2)$out  # outlier values.
outlier_values
print(data2[data2[,2]==outlier_values])
print(data2[data2[,2]==outlier_values],)
print(data2[data2[,2]==outlier_values,])
print(data2[data2[,2]==outlier_values,c(1,2)])
outlier_values <- boxplot.stats(data2[,5])$out  # outlier values.
print(data2[data2[,5]==outlier_values,c(1,5)])
data2[data2$COKE==mybox5$out,c(1,5)]
data2[data2$COKE==outlier_values,c(1,5)]
class(outlier_values)
outlier_values
mybox2$out
data2[data2$COKE==c(0.215,0.330,0.254),c(1,5)]
data2[which(data2$COKE==c(0.215,0.330,0.254)),c(1,5)]
data2[data2$COKE==0.215,c(1,5)]
c(
data2[data2$COKE==c(0.215,0.330,0.254),c(1,5)]
data2[data2$COKE==c(0.215,0.330,0254),c(1,5)]
data2[data2$COKE==c(0.215,0.330,0254),c(1,5)]
data2[data2$COKE==c(0.215,0.330,0254),]
data2[data2$COKE==c(0.215,0.330,0254)]
data2[data2$COKE==0.215|0.330|0.254,c(1,5)]
data2[data2$COKE==c(0.215,0.330,0254),c(1,5)]
?subset
subset(data2, COKE == mybox5$out, select = c(date1, COKE))
subset(data2, COKE == mybox5$out[1], select = c(date1, COKE))
subset(data2, COKE == mybox5$out[2], select = c(date1, COKE))
ncol(outlier_values)
dim(outlier_values)
outlier_values
length(outlier_values)
mybox4 = boxplot(data2[,4])
data2[data2[,4]==mybox4$out[1],c(1,4)]
data2[data2[,4]==mybox4$out[2],c(1,4)]
for (i in nrow(data2)) {
outlier[i] = boxplot.stats(data2[,i+1])$out
for (j in length(outlier[i])) {
data2[data2[,i+1]==mybox[i]$out[j],c(1,i+1)]
}
}
for (i in nrow(data2)) {
outlier[i] = boxplot.stats(data2[,i+1])$out
for (j in length(outlier[i])) {
data2[data2[,i+1]==mybox[i]$out[j],c(1,i+1)]
}
}
subset(data2, data2[,5] == mybox5$out[1], select = c(date1, COKE))
for (i in nrow(data2)) {
outlier[i] = boxplot.stats(data2[,i+1])$out
for (j in length(outlier[i])) {
data2[data2[,i+1]==outlier[i][j],c(1,i+1)]
}
}
for (i in nrow(data2)) {
outlier[i] = boxplot.stats(data2[,i+1])$out
for (j in length(outlier[i])) {
data2[data2[,i+1]==outlier[i][j],c(1,i+1)]
}
}
subset(data2, data2[,5] == mybox5$out[1], select = c(date1, data2[,5]))
subset(data2, data2[,5] == mybox5$out[1], select = c(1,5))
for (i in nrow(data2)) {
outlier[i] = boxplot.stats(data2[,i+1])$out
for (j in length(outlier[i])) {
subset(data2, data2[,i+1] == outlier[i][j], select = c(1,i+1))
}
}
for (i in nrow(data2)) {
outlier[i] = boxplot.stats(data2[,i+1])$out
for (j in length(outlier[i])) {
subset(data2, data2[,[i+1]] == outlier[i][j], select = c(1,[i+1]))
}
}
for (i in nrow(data2)) {
outlier[i] = boxplot.stats(data2[,i+1])$out
for (j in length(outlier[i])) {
subset(data2, data2[,[i+1]] == outlier[i][j], select = c(1,[i+1]))
}
}
?for
/
?for  for
?for
.
?factanal
for (i in nrow(data2)) {
outlier[i] = boxplot.stats(data2[,i+1])$out
for (j in length(outlier[i])) {
subset(data2, data2[,i+1] == outlier[i][j], select = c(1,i+1))
}
}
outlier2 = boxplot.stats(data2[,2])$out
for (i in length(outlier2)) {
subset(data2, data2[,2] == outlier2[i], select = c(1,2))
}
outlier2 = boxplot.stats(data2[,2])$out
for (i in length(outlier2)) {
print(subset(data2, data2[,2] == outlier2[i], select = c(1,2)))
}
outlier2
outlier2 = boxplot.stats(data2[,2])$out
for (i in length(outlier2)) {
print(subset(data2, data2[,2] == outlier2[i], select = c(1,2)))
}
for (i in 10) {
print(subset(data2, data2[,2] == outlier2[i], select = c(1,2)))
}
for (i in 1:10) {
print(subset(data2, data2[,2] == outlier2[i], select = c(1,2)))
}
outlier = boxplot.stats(data2[,2])$out
n = length(outlier)
for (i in 1:n) {
print(subset(data2, data2[,2] == outlier[i], select = c(1,2)))
}
for (i in nrow(data2)) {
outlier[i] = boxplot.stats(data2[,i+1])$out
for (j in 1:length(outlier[i])) {
subset(data2, data2[,i+1] == outlier[i][j], select = c(1,i+1))
}
}
outlier = boxplot.stats(data2[,2])$out
for (j in 1:length(outlier)) {
subset(data2, data2[,2] == outlier[j], select = c(1,2))
}
outlier = boxplot.stats(data2[,2])$out
for (j in 1:length(outlier)) {
print(subset(data2, data2[,2] == outlier[j], select = c(1,2)))
}
for (i in 1:ncol(netreturn)) {
outlier[i] = boxplot.stats(data2[,i+1])$out
for (j in 1:length(outlier[i])) {
print(subset(data2, data2[,i+1] == outlier[i][j], select = c(1,i+1)))
}
}
outlier = boxplot.stats(data2[,2])$out
for (j in 1:length(outlier)) {
print(subset(data2, data2[,2] == outlier[j], select = c(1,2)))
}
outlier = boxplot.stats(data2[,3])$out
for (j in 1:length(outlier)) {
print(subset(data2, data2[,3] == outlier[j], select = c(1,3)))
}
outlier = boxplot.stats(data2[,4])$out
for (j in 1:length(outlier)) {
print(subset(data2, data2[,4] == outlier[j], select = c(1,4)))
}
outlier = boxplot.stats(data2[,5])$out
for (j in 1:length(outlier)) {
print(subset(data2, data2[,5] == outlier[j], select = c(1,5)))
}
outlier = boxplot.stats(data2[,6])$out
for (j in 1:length(outlier)) {
print(subset(data2, data2[,6] == outlier[j], select = c(1,6)))
}
outlier = boxplot.stats(data2[,7])$out
for (j in 1:length(outlier)) {
print(subset(data2, data2[,7] == outlier[j], select = c(1,7)))
}
outlier = boxplot.stats(data2[,8])$out
for (j in 1:length(outlier)) {
print(subset(data2, data2[,8] == outlier[j], select = c(1,8)))
}
outlier = boxplot.stats(data2[,9])$out
for (j in 1:length(outlier)) {
print(subset(data2, data2[,9] == outlier[j], select = c(1,9)))
}
outlier = boxplot.stats(data2[,10])$out
for (j in 1:length(outlier)) {
print(subset(data2, data2[,10] == outlier[j], select = c(1,10)))
}
outlier = boxplot.stats(data2[,11])$out
for (j in 1:length(outlier)) {
print(subset(data2, data2[,11] == outlier[j], select = c(1,11)))
}
outlier = boxplot.stats(data2[,12])$out
for (j in 1:length(outlier)) {
print(subset(data2, data2[,12] == outlier[j], select = c(1,12)))
}
outlier = boxplot.stats(data2[,13])$out
for (j in 1:length(outlier)) {
print(subset(data2, data2[,13] == outlier[j], select = c(1,13)))
}
outlier = boxplot.stats(data2[,14])$out
for (j in 1:length(outlier)) {
print(subset(data2, data2[,14] == outlier[j], select = c(1,14)))
}
outlier = boxplot.stats(data2[,15])$out
for (j in 1:length(outlier)) {
print(subset(data2, data2[,15] == outlier[j], select = c(1,15)))
}
outlier = boxplot.stats(data2[,16])$out
for (j in 1:length(outlier)) {
print(subset(data2, data2[,16] == outlier[j], select = c(1,16)))
}
boxplot(netreturn)
??fi-plot
??fiplot
?gedFit
?rged
AICnorm<-rep(0,ncol(netreturn)-1)
BICnorm<-rep(0,ncol(netreturn)-1)
for (i in 1:(ncol(netreturn)-1)){
fitnorm<-fitdist(netreturn[,i],"norm")
AICnorm[i]<-fitnorm$aic
BICnorm[i]<-fitnorm$bic
}
AICnorm
BICnorm
loglik<-rep(0,ncol(netreturn)-1)
AICt<-rep(0,ncol(netreturn)-1)
for(i in 1:(ncol(netreturn)-1)){
fitt<-fitdistr(netreturn[,i],"t",df=ncol(netreturn)-1-2,list(m=stdFit(netreturn[,i])$par[1],s=stdFit(netreturn[,i])$par[2]),lower=c(-1,0.0001,1))
loglik[i]<-fitt$loglik
AICt[i]<-AIC(fitt)
}
AICt
gedFit(netreturn[,1])
gedFit(quantile(netreturn[,1]))
?nlm
